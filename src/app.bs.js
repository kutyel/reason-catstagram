// Generated by BUCKLESCRIPT VERSION 4.0.5, PLEASE EDIT WITH CARE
'use strict';

var Post = require("./post.bs.js");
var Block = require("bs-platform/lib/js/block.js");
var Curry = require("bs-platform/lib/js/curry.js");
var React = require("react");
var Belt_List = require("bs-platform/lib/js/belt_List.js");
var ReasonReact = require("reason-react/src/ReasonReact.js");

((require('./app.css')));

var component = ReasonReact.reducerComponent("App");

function urlToRoute(url) {
  var match = url[/* path */0];
  if (match && match[0] === "view") {
    var match$1 = match[1];
    if (match$1 && !match$1[1]) {
      return /* Detail */[match$1[0]];
    } else {
      return /* Default */0;
    }
  } else {
    return /* Default */0;
  }
}

function make() {
  return /* record */[
          /* debugName */component[/* debugName */0],
          /* reactClassInternal */component[/* reactClassInternal */1],
          /* handedOffState */component[/* handedOffState */2],
          /* willReceiveProps */component[/* willReceiveProps */3],
          /* didMount */(function (self) {
              var watcherID = ReasonReact.Router[/* watchUrl */1]((function (url) {
                      return Curry._1(self[/* send */3], /* ChangeRoute */[urlToRoute(url)]);
                    }));
              return Curry._1(self[/* onUnmount */4], (function () {
                            return ReasonReact.Router[/* unwatchUrl */2](watcherID);
                          }));
            }),
          /* didUpdate */component[/* didUpdate */5],
          /* willUnmount */component[/* willUnmount */6],
          /* willUpdate */component[/* willUpdate */7],
          /* shouldUpdate */component[/* shouldUpdate */8],
          /* render */(function (param) {
              var match = param[/* state */1];
              var activeRoute = match[/* activeRoute */1];
              var posts = Belt_List.toArray(Belt_List.map(match[/* posts */0], (function (post) {
                          return ReasonReact.element(undefined, undefined, Post.make(post, /* array */[]));
                        })));
              return React.createElement("div", {
                          className: "App"
                        }, activeRoute ? "route:" + activeRoute[0] : posts);
            }),
          /* initialState */(function () {
              return /* record */[
                      /* posts : :: */[
                        /* record */[
                          /* id */"1",
                          /* image */"https://instagram.falc2-2.fna.fbcdn.net/vp/144b6ac07f994a13a7f85fda32f9b8d5/5C160DBC/t51.2885-15/e35/33630499_1741098989349139_7374174821044715520_n.jpg",
                          /* count */0,
                          /* description */"cat"
                        ],
                        /* [] */0
                      ],
                      /* activeRoute */urlToRoute(ReasonReact.Router[/* dangerouslyGetInitialUrl */3](/* () */0))
                    ];
            }),
          /* retainedProps */component[/* retainedProps */11],
          /* reducer */(function (action, state) {
              if (action) {
                return /* Update */Block.__(0, [/* record */[
                            /* posts */state[/* posts */0],
                            /* activeRoute */action[0]
                          ]]);
              } else {
                return /* NoUpdate */0;
              }
            }),
          /* jsElementWrapped */component[/* jsElementWrapped */13]
        ];
}

exports.component = component;
exports.urlToRoute = urlToRoute;
exports.make = make;
/*  Not a pure module */
